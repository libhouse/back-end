<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LibHouse.API</name>
    </assembly>
    <members>
        <member name="M:LibHouse.API.V1.Controllers.AddressesAspNetCoreController.GetAddressByPostalCodeAsync(System.String)">
            <summary>
            Busca os dados de um endereço a partir do seu número de código postal.
            </summary>
            <param name="postalCodeNumber" example="01001000">O número do código postal a ser pesquisado.</param>
            <returns>Em caso de sucesso, retorna um objeto com os dados do endereço. Em caso de erro, retorna uma lista de notificações.</returns>
            <response code="200">Os dados do endereço foram obtidos com sucesso.</response>
            <response code="404">O endereço não foi encontrado.</response>
            <response code="500">Erro ao processar a requisição no servidor.</response>
        </member>
        <member name="M:LibHouse.API.V1.Controllers.ResidentsAspNetCoreController.RegisterResidentRoomPreferencesAsync(LibHouse.Infrastructure.Controllers.ViewModels.Residents.ResidentRoomPreferencesRegistrationViewModel)">
            <summary>
            Cadastra as preferências de cômodos de um morador.
            </summary>
            <param name="preferencesRegistrationViewModel">Objeto que possui os dados necessários para cadastrar as preferências de cômodos do morador.</param>
            <returns>Em caso de sucesso, retorna um objeto vazio. Em caso de erro, retorna uma lista de notificações.</returns>
            <response code="200">As preferências do morador foram registradas com sucesso.</response>
            <response code="400">Os dados enviados são inválidos ou as preferências já estão cadastradas.</response>
            <response code="500">Erro ao processar a requisição no servidor.</response>
        </member>
        <member name="M:LibHouse.API.V1.Controllers.ResidentsAspNetCoreController.RegisterResidentServicesPreferencesAsync(LibHouse.Infrastructure.Controllers.ViewModels.Residents.ResidentServicesPreferencesRegistrationViewModel)">
            <summary>
            Cadastra as preferências de serviços de um morador.
            </summary>
            <param name="preferencesRegistrationViewModel">Objeto que possui os dados necessários para cadastrar as preferências de serviços do morador.</param>
            <returns>Em caso de sucesso, retorna um objeto vazio. Em caso de erro, retorna uma lista de notificações.</returns>
            <response code="200">As preferências do morador foram registradas com sucesso.</response>
            <response code="400">Os dados enviados são inválidos ou as preferências já estão cadastradas.</response>
            <response code="500">Erro ao processar a requisição no servidor.</response>
        </member>
        <member name="M:LibHouse.API.V1.Controllers.ResidentsAspNetCoreController.RegisterResidentChargePreferencesAsync(LibHouse.Infrastructure.Controllers.ViewModels.Residents.ResidentChargePreferencesRegistrationViewModel)">
            <summary>
            Cadastra as preferências de cobrança de um morador.
            </summary>
            <param name="preferencesRegistrationViewModel">Objeto que possui os dados necessários para cadastrar as preferências de cobranças do morador.</param>
            <returns>Em caso de sucesso, retorna um objeto vazio. Em caso de erro, retorna uma lista de notificações.</returns>
            <response code="200">As preferências do morador foram registradas com sucesso.</response>
            <response code="400">Os dados enviados são inválidos ou as preferências já estão cadastradas.</response>
            <response code="500">Erro ao processar a requisição no servidor.</response>
        </member>
        <member name="M:LibHouse.API.V1.Controllers.ResidentsAspNetCoreController.RegisterResidentGeneralPreferencesAsync(LibHouse.Infrastructure.Controllers.ViewModels.Residents.ResidentGeneralPreferencesRegistrationViewModel)">
            <summary>
            Cadastra as preferências gerais de um morador.
            </summary>
            <param name="preferencesRegistrationViewModel">Objeto que possui os dados necessários para cadastrar as preferências gerais do morador.</param>
            <returns>Em caso de sucesso, retorna um objeto vazio. Em caso de erro, retorna uma lista de notificações.</returns>
            <response code="200">As preferências do morador foram registradas com sucesso.</response>
            <response code="400">Os dados enviados são inválidos ou as preferências já estão cadastradas.</response>
            <response code="500">Erro ao processar a requisição no servidor.</response>
        </member>
        <member name="M:LibHouse.API.V1.Controllers.ResidentsAspNetCoreController.RegisterResidentLocalizationPreferencesAsync(LibHouse.Infrastructure.Controllers.ViewModels.Residents.ResidentLocalizationPreferencesRegistrationViewModel)">
            <summary>
            Cadastra as preferências de localização de um morador.
            </summary>
            <param name="preferencesRegistrationViewModel">Objeto que possui os dados necessários para cadastrar as preferências de localização do morador.</param>
            <returns>Em caso de sucesso, retorna um objeto vazio. Em caso de erro, retorna uma lista de notificações.</returns>
            <response code="200">As preferências do morador foram registradas com sucesso.</response>
            <response code="400">Os dados enviados são inválidos ou as preferências já estão cadastradas.</response>
            <response code="500">Erro ao processar a requisição no servidor.</response>
        </member>
        <member name="M:LibHouse.API.V1.Controllers.UsersAspNetCoreController.RegisterUserAsync(LibHouse.Infrastructure.Controllers.ViewModels.Users.UserRegistrationViewModel)">
            <summary>
            Cadastra um novo usuário na plataforma, enviando um e-mail automático de confirmação.
            </summary>
            <param name="userRegistrationViewModel">Objeto que possui os dados necessários para cadastrar o usuário.</param>
            <returns>Em caso de sucesso, retorna um objeto vazio. Em caso de erro, retorna uma lista de notificações.</returns>
            <response code="200">O usuário foi registrado com sucesso.</response>
            <response code="400">Os dados enviados são inválidos, o usuário já está cadastrado ou houve uma falha para registrá-lo.</response>
            <response code="500">Erro ao processar a requisição no servidor.</response>
        </member>
        <member name="M:LibHouse.API.V1.Controllers.UsersAspNetCoreController.ConfirmUserRegistrationAsync(LibHouse.Infrastructure.Controllers.ViewModels.Users.ConfirmUserRegistrationViewModel)">
            <summary>
            Confirma o cadastro de um novo usuário na plataforma.
            </summary>
            <param name="confirmUserRegistrationViewModel">Objeto que possui os dados necessários para confirmar o cadastro do usuário.</param>
            <returns>Em caso de sucesso, retorna um objeto vazio. Em caso de erro, retorna uma lista de notificações.</returns>
            <response code="204">O cadastro do usuário foi confirmado com sucesso.</response>
            <response code="400">Os dados enviados são inválidos ou o token de confirmação expirou.</response>
            <response code="500">Erro ao processar a requisição no servidor.</response>
        </member>
        <member name="M:LibHouse.API.V1.Controllers.UsersAspNetCoreController.LoginUserAsync(LibHouse.Infrastructure.Controllers.ViewModels.Users.UserLoginViewModel)">
            <summary>
            Realiza o login de um usuário na plataforma, gerando um token de acesso.
            </summary>
            <param name="userLoginViewModel">Objeto que possui os dados necessários para confirmar o login do usuário.</param>
            <returns>Em caso de sucesso, retorna um objeto com os dados do usuário e do token. Em caso de erro, retorna uma lista de notificações.</returns>
            <response code="200">O login do usuário foi confirmado com sucesso.</response>
            <response code="400">Os dados enviados são inválidos ou houve uma falha na autenticação do usuário.</response>
            <response code="500">Erro ao processar a requisição no servidor.</response>
        </member>
        <member name="M:LibHouse.API.V1.Controllers.UsersAspNetCoreController.LogoutUserAsync(LibHouse.Infrastructure.Controllers.ViewModels.Users.UserLogoutViewModel)">
            <summary>
            Realiza o logout de um usuário.
            </summary>
            <param name="userLogoutViewModel">Objeto que possui os dados necessários para realizar o logout do usuário.</param>
            <returns>Em caso de sucesso, retorna um objeto vazio. Em caso de erro, retorna uma lista de notificações.</returns>
            <response code="204">O logout do usuário foi confirmado com sucesso.</response>
            <response code="400">Os dados enviados são inválidos ou houve uma falha na revogação do refresh token do usuário.</response>
            <response code="500">Erro ao processar a requisição no servidor.</response>
        </member>
        <member name="M:LibHouse.API.V1.Controllers.UsersAspNetCoreController.RefreshTokenAsync(LibHouse.Infrastructure.Controllers.ViewModels.Users.UserLoginRenewalViewModel)">
            <summary>
            Renova um access token expirado a partir de um refresh token.
            </summary>
            <param name="userLoginRenewalViewModel">Objeto que possui os dados necessários para renovar o access token.</param>
            <returns>Em caso de sucesso, retorna um objeto com os dados do usuário e do novo token. Em caso de erro, retorna uma lista de notificações.</returns>
            <response code="200">O token do usuário foi renovado com sucesso.</response>
            <response code="400">Os dados enviados são inválidos ou houve uma falha na validação do refresh token.</response>
            <response code="500">Erro ao processar a requisição no servidor.</response>
        </member>
        <member name="M:LibHouse.API.V1.Controllers.UsersAspNetCoreController.RequestPasswordResetAsync(LibHouse.Infrastructure.Controllers.ViewModels.Users.UserPasswordResetViewModel)">
            <summary>
            Solicita a redefinição de senha para um usuário.
            </summary>
            <param name="userPasswordResetViewModel">Objeto que possui os dados necessários para solicitar a redefinição de senha do usuário.</param>
            <returns>Em caso de sucesso, retorna um objeto vazio. Em caso de erro, retorna uma lista de notificações.</returns>
            <response code="200">A solicitação de redefinição de senha foi confirmada com sucesso.</response>
            <response code="400">Os dados enviados são inválidos ou houve uma falha na geração do token de redefinição de senha.</response>
            <response code="500">Erro ao processar a requisição no servidor.</response>
        </member>
        <member name="M:LibHouse.API.V1.Controllers.UsersAspNetCoreController.ConfirmPasswordResetAsync(LibHouse.Infrastructure.Controllers.ViewModels.Users.ConfirmUserPasswordResetViewModel)">
            <summary>
            Confirma a redefinição de senha de um usuário.
            </summary>
            <param name="confirmUserPasswordResetViewModel">Objeto que possui os dados necessários para confirmar a redefinição de senha do usuário.</param>
            <returns>Em caso de sucesso, retorna um objeto vazio. Em caso de erro, retorna uma lista de notificações.</returns>
            <response code="204">A senha do usuário foi redefinida com sucesso.</response>
            <response code="400">Os dados enviados são inválidos ou houve um erro na redefinição da senha.</response>
            <response code="500">Erro ao processar a requisição no servidor.</response>
        </member>
    </members>
</doc>
